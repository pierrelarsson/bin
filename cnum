#!/usr/bin/env python

import sys
import re

innums = {
    'hex': lambda x: int(x, 16),
    'dec': lambda x: int(x, 10),
    'oct': lambda x: int(x, 8),
    'bin': lambda x: int(x, 2),
}

outnums = {
    'hex': lambda x, y=0: format(x, '#0{0}x'.format(y/4+2)),
    'dec': lambda x, y=0: format(x, '#d'),
    'oct': lambda x, y=0: format(x, '#o'),
    'bin': lambda x, y=0: format(x, '#0{0}b'.format(y+2)),
}

def main(number, bits=0, *args, **kwargs):
    bits = int(bits)
    for innum in ['hex', 'dec', 'oct', 'bin']:
        try:
            if re.match('0b[01]+$', number) and innum != 'bin': raise ValueError
            num = innums[innum](number)
            print "{0}: {1} ({2})".format(innum, outnums[innum](num, bits), num.bit_length())
            for outnum in ['hex', 'dec', 'oct', 'bin']:
                if outnum != innum:
                    print "{0:>5s}: {1}".format(outnum, outnums[outnum](num, bits))
            print
        except ValueError:
            pass

if __name__ == "__main__":
    main(*sys.argv[1:])

